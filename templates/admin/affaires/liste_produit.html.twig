<style>
    .modal-list-produit {
        min-width: 260% !important;
        margin-left: -25rem !important;
    }
    td {
        border-bottom: none !important;
    }
    
    #filter_category_chosen {
        width: 300px !important;
    }

    .card-table {
        background-color: #f6f9ff;
    }
</style>
<div class="modal fade" id="modalListProduitCategorie" tabindex="-1" aria-labelledby="modalNewLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog ">
        <div class="modal-content p-4 modal-list-produit">
            <div class="modal-header modal-header-center">
                <h5 class="modal-title fw-bold" id="modalNewLabel">Nouveau produit depuis le catalogue</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="return reloadTabFinancier()"></button>
                <hr>
                
            </div>
            <div class="modal-body">
                <div class="form-group d-flex align-items-center mt-5">
                    <label for="" class=" text-nowrap" style="margin-right: 15px;">Filtrer par catégorie :</label>
                    <select name="filter_category" id="filter_category" class="form-control form-control-sm chosen-select" >
                        {% for categorie in categories %}
                            <option value="{{categorie.id}}"> {{categorie.nom}} </option>
                        {% endfor %}
                    </select>
                </div>
                
                <div class="card-table mt-5 p-3 p-lg-5">
                    <table class="table table-striped" id="table-liste-produit" style="width: 100% !important;">
                        <thead>
                            <tr>
                                <th class="text-center text-nowrap">Actions</th>
                                <th class="text-center text-nowrap">Ref</th>
                                <th class="text-center text-nowrap">Intitulé/Détail</th>
                                <th class="text-center text-nowrap">Stock restant</th>
                                <th class="text-center text-nowrap">Qtt réserver</th>
                                <th class="text-center text-nowrap">Type vente</th>
                                <th class="text-center text-nowrap">Qtt</th>
                                <th class="text-center text-nowrap">Vente gros</th>
                                {# <th class="text-center text-nowrap">Unite gros</th> #}
                                <th class="text-center text-nowrap">Vente detail</th>
                                {# <th class="text-center text-nowrap">Unite detail</th> #}
                                {# <th class="text-center text-nowrap">St.min</th> #}
                                {# <th class="text-center text-nowrap">Stock</th> #}
                            </tr>
                        </thead>
                        <tbody>
                            {% for liste in listes %}
                            <tr class="text-nowrap" data-filter="{{ liste.categorie }}">
                                <td>
                                    <a onclick="return addPanier(this, {{ affaire.id }}, {{liste.volumeGros}}, {{liste.volumeDetail}} );"
                                           class="panier" style="cursor: pointer;"><i class="bi bi-cart-plus-fill"></i>
                                        <span class="mx-1">Ajouter</span>
                                    </a>
                                  
                                </td>
                                <td>
                                    <input type="hidden" name="idProduit"
                                           value="{{ liste.id }}"> 
                                    {% if liste.reference is not null %}
                                        {{liste.reference}} 
                                    {% endif %}
                                </td>
                                <td> 
                                    {{liste.nom}} / (1 {{liste.presentationGros}} {% if liste.volumeGros > 0 %} de {{liste.volumeGros}} {{liste.uniteVenteGros}} {% endif %})
                                </td>
                                {% set volumeGros = liste.volumeGros %}
                                {% if liste.volumeGros == 0 %}
                                         {% set resteQtt = 0 %}
                                         {% if liste.qttReserver is not null and liste.qttReserver > 0 %}
                                            {% set resteQtt = liste.stockRestant - resteQtt  %}
                                         {% else %}
                                            {% set resteQtt = liste.stockRestant %}
                                         {% endif %}

                                         {% set nombreProduitPresentation = ((resteQtt) |round(0)) %}
                                         {% set qttProduitPresente = nombreProduitPresentation %}
                                {% else %}
                                            {% set resteQtt = 0 %}
                                            {% if liste.qttReserver is not null and liste.qttReserver > 0 %}
                                                {% set resteQtt = liste.stockRestant - resteQtt  %}
                                            {% else %}
                                                {% set resteQtt = liste.stockRestant %}
                                            {% endif %}

                                         {% set nombreProduitPresentation = ((resteQtt) |round(0)) %}
                                         {% set qttProduitPresente = nombreProduitPresentation * volumeGros  %}
                                {% endif %}
                              
                               {% set diffenceQttProduit = 0 %}
                               {%                                                                    set showParenthese = 1 %}
                               {% set ruptureGros = 0 %}
                                {% if volumeGros > 0 %}
                                    {% set diffenceQttProduit = (liste.stockRestant * volumeGros - qttProduitPresente) %}
                                    {% if qttProduitPresente > liste.stockRestant * volumeGros and liste.volumeGros > 0 %}
                                            {% set diffenceQttProduit = liste.volumeGros - (qttProduitPresente - liste.stockRestant) %}
                                    {% endif %}
                                    
                                    
                                    {% if liste.volumeGros > 0 and liste.stockRestant * volumeGros < liste.volumeGros %}
                                            {% set showParenthese = 0 %}
                                    {% endif %}
                                {% endif %}
                                <td>
                                    <input type="hidden" name="qttRestant" value="{{ liste.stockRestant }}">
                                    {% set formattedStockRestant = (liste.stockRestant - liste.qttReserver)|number_format(2, '.', '') %}
                                        {% if liste.volumeGros > 0 %}
                                        {% set qttReserverDetail = liste.qttReserverDetail / liste.volumeGros %}
                                        {% endif %}
                                    {% if liste.qttReserverGros is not null and liste.qttReserverDetail is not null %}
                                        <span class="stock-restant" data-stock="{{liste.stockRestant - liste.qttReserver}}">
                                            {% set stockRestant = liste.stockRestant - liste.qttReserverGros - qttReserverDetail %} 
                                            {% set sacs = stockRestant|round(0, 'floor') %}
                                            {% set decimal = stockRestant - sacs %}
                                            {% set unite = decimal * liste.volumeGros %}
                                            {{sacs}} {{liste.presentationGros}} {% if unite > 0 %} et {{unite|number_format(2,'.','')}} {{liste.uniteVenteGros}} {% endif %}
                                        </span>
                                            {% elseif liste.qttReserverGros is not null and (liste.qttReserverDetail is null or liste.qttReserverDetail == 0) %}
                                                {{liste.stockRestant - liste.qttReserverGros}} {{liste.presentationGros}}
                                            {% elseif liste.qttReserverDetail is not null and (liste.qttReserverGros is null or liste.qttReserverGros == 0) %}
                                            {% set stockRestant = liste.stockRestant - liste.qttReserverGros - qttReserverDetail %} 
                                            {% set sacs = stockRestant|round(0, 'floor') %}
                                            {% set decimal = stockRestant - sacs %}
                                            {% set unite = decimal * liste.volumeGros %}
                                            {{sacs}} {{liste.presentationGros}} {% if unite > 0 %} et {{unite|number_format(2,'.','')}} {{liste.uniteVenteGros}} {% endif %}
                                    {% else %}
                                        <span class="stock-restant" data-stock="{{nombreProduitPresentation}}">
                                            {% set stockRestant = liste.stockRestant %}
                                            {% set sacs = stockRestant|round(0, 'floor') %}
                                            {% set decimal = stockRestant - sacs %}
                                            {% set unite = decimal * liste.volumeGros %}
                                            {{sacs}} {{liste.presentationGros}} {% if unite > 0 %} et {{unite|number_format(2,'.','')}} {{liste.uniteVenteGros}} {% endif %}
                                        </span> 
                                    {% endif %}

                                </td>
                                <td>
                                    {% if liste.qttReserverGros is not null and liste.qttReserverDetail is not null %}
                                        {{liste.qttReserverGros}} {{liste.presentationGros}} et {{liste.qttReserverDetail}} {{liste.uniteVenteGros}}
                                    {% elseif liste.qttReserverGros is not null and (liste.qttReserverDetail is null or liste.qttReserverDetail == 0 ) %}
                                        {{liste.qttReserverGros}} {{liste.presentationGros}}    
                                    {% elseif liste.qttReserverDetail is not null and (liste.qttReserverGros is null or liste.qttReserverGros == 0 ) %}
                                        {{liste.qttReserverDetail}} {{liste.uniteVenteGros}}    
                                    {% endif %}
                                    
                                </td>
                                <td> 
                                    <select name="typeVente" id="typeVente" class="form-control">
                                        <option value="">Type vente</option>
                                        <option value="gros">Gros</option>
                                        {% if (liste.prixVenteDetail is not null and liste.prixVenteDetail > 0) and (liste.prixVenteGros != liste.prixVenteDetail)  %}
                                            <option value="detail">Détail</option>
                                        {% endif %}
                                    </select>
                                 </td>
                                 {% set units = {
                                    'kg': [
                                        {'name': 'hg', 'label': 'hg', 'divider': 10},
                                        {'name': 'dag', 'label': 'dag', 'divider': 100},
                                        {'name': 'g', 'label': 'g', 'divider': 1000},
                                        {'name': 'dg', 'label': 'dg', 'divider': 10000},
                                        {'name': 'cg', 'label': 'cg', 'divider': 100000},
                                        {'name': 'mg', 'label': 'mg', 'divider': 1000000}
                                    ],
                                    'l': [
                                        {'name': 'dL', 'label': 'dL', 'divider': 10},
                                        {'name': 'cL', 'label': 'cL', 'divider': 100},
                                        {'name': 'mL', 'label': 'mL', 'divider': 1000},
                                    ],
                                    'pcs': [
                                    ],
                                    'unite': [
                                    ],
                                    'ml': [
                                        
                                    ],
                                    'sachet': [
                                        
                                    ],
                                    'cp': [
                                        
                                    ],
                                    'g': [
                                        
                                    ],
                                    'pipette': [
                                        
                                    ],
                                    'boite': [
                                        
                                    ],
                                    'flacon': [
                                        
                                    ],
                                } %}
                                 <td class="quantity"> 
                                    <span class="volumeGros" data-volume="{{liste.volumeGros}}"></span>
                                    <span class="presentationGros" data-presentation="{{liste.presentationGros}}"></span>
                                    <span class="uniteVenteGros" data-unite="{{liste.uniteVenteGros}}"></span>
                                    <input type="text" value="{{ liste.qtt }}" id="qttProduit" name="qttProduit" class="form-control" readonly>
                                    <span class="unite"></span>
                                    {% if liste.uniteVenteGros is not null and units[liste.uniteVenteGros]|length > 0  %}
                                    <input type="checkbox" name="other" id="other" class="other">
                                    <label for="" class="label-other">Autre</label>
                                    {% endif %}
                                    
                                    {% if liste.uniteVenteGros is not null %}

                                        <p class="other-unite">
                                            {% set current_units = units[liste.uniteVenteGros] %}
                                            {% set name = '' %}
                                            {% if current_units is defined %}
                                                {% for unit in current_units %}
                                                {% if unit is not null and  unit != "" %}
                                                    {% set name = unit.name %}
                                                    <span class="unite-name" data-name="{{unit.name}}"></span>
                                                    <input data-name="{{unit.name}}" type="radio" name="unite-{{ unit.name }}" id="unite-{{ unit.name }}" class="unite-check">
                                                    <label for="unite-{{ unit.name }}">{{ unit.label }}</label>
                                                    <span class="divider-{{unit.name}}" data-divider="{{ unit.divider }}"></span>
                                                {% endif %}
                                                    {% endfor %}
                                                <br>
                                                <input type="text" name="valeur-unite" class="form-control form-control-sm valeur-unite" placeholder="Entrez la valeur" readonly>
                                            {% endif %}
                                            
                                        </p>
                                    {% endif %}
                                </td>
                                <td> 
                                    {% if liste.prixVenteGros is not null %}
                                        {{liste.prixVenteGros}} Ar {% if liste.presentationGros is not null %} / {{liste.presentationGros}}  {% endif %}
                                    {% endif %}
                                </td>
                                 <td> 
                                    {% if liste.prixVenteDetail is not null %}
                                        {{liste.prixVenteDetail}} Ar {% if liste.uniteVenteDetail is not null %} / {{liste.uniteVenteDetail}} ({{liste.presentationDetail}}) {% endif %} 
                                    {% endif %}
                                </td>
                            </tr>
                            {% else %}
                                <tr>
                                    <td colspan="9">
                                        Aucun enregistrement trouvé
                                        <a href="#tab-import-produit" onclick="return showTabImportProduit()">Importer produit</a>
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    {# <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td> #}
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                    <div class="form-group mt-5">
                        <button type="button" class="btn btn-primary btn-sm px-5" data-bs-dismiss="modal" aria-label="Close" onclick="return reloadTabFinancier()">Terminé</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="affaire-id-reload" data-affaire="{{affaire.id}}"></div>
<script src="{{ asset('assets/js/script_utile.js')}}"></script>

<script>

$(document).ready(function() {
    var table = $('#table-liste-produit').DataTable({
        responsive: true,
        language: {
            url: 'https://cdn.datatables.net/plug-ins/1.13.7/i18n/fr-FR.json',
        },
        scrollX: true,
        pageLength: 10,
        scrollCollapse: false,
    });

    $('#modalListProduitCategorie').on('shown.bs.modal', function () {
        if (table.columns.adjust().responsive != undefined) {
            table.columns.adjust().responsive.recalc();
        }
    });

    $.fn.dataTable.ext.search.push(
        function(settings, data, dataIndex) {
            var selectedCategory = $('#filter_category_chosen .chosen-single span').text().trim().toLowerCase();
            var rowCategory = $(table.row(dataIndex).node()).data('filter').trim().toLowerCase();

            if (!selectedCategory || selectedCategory === rowCategory) {
                return true;
            }
            return false;
        }
    );

    $('#filter_category_chosen').on('DOMSubtreeModified', function() {
        table.draw();
    });
});

function reloadTabFinancier()
{
    var affaireId = $('#affaire-id-reload').data('affaire');
    financier(affaireId);
}
</script>

<script>
   $(document).ready(function() {
    $('.other').hide();
    $('.label-other').hide();
    $('.other-unite').hide();
    // Écouter les événements de changement pour tous les éléments de typeVente    
    $('select[name="typeVente"]').change(function() {
        // Récupérer l'élément de vente sélectionné et le champ qttProduit correspondant
        var typeVente = $(this).val();
        var row = $(this).closest('tr');
        var qttProduit = row.find('input[name="qttProduit"]');
        var volumeGros = row.find('span.volumeGros').data('volume');
        var qttTd = row.find('td.quantity');
        var unite = row.find('span.unite');
        var presentationGros = row.find('span.presentationGros').data('presentation');
        var uniteVenteGros = row.find('span.uniteVenteGros').data('unite');
        var inputOther = row.find('input.other');
        var labelOther = row.find('label.label-other');
        var otherUnite = row.find('p.other-unite');
        var stockRestant = row.find('.stock-restant').data('stock');

        // Toujours retirer les anciens événements associés à qttProduit
        qttProduit.off('input');

        // Vérifier si un type de vente a été sélectionné
        if (typeVente !== "") {
            // Retirer l'attribut readonly si un type de vente est sélectionné
            qttProduit.removeAttr('readonly');
        } else {
            // Remettre l'attribut readonly si aucun type de vente n'est sélectionné
            qttProduit.attr('readonly', true);
        }

        // Si le type de vente est "detail", récupérer la valeur du champ qttProduit
        if (typeVente == "detail") {
            qttProduit.css('background-color', '#fff');
            unite.text(uniteVenteGros);
            inputOther.show();
            labelOther.show();
            // Récupérer la valeur de l'input qttProduit
            qttProduit.on('input', function() {
                // Récupérer la valeur de l'input qttProduit pendant la saisie
                var qttValeur = $(this).val();

                if(volumeGros > 0 && qttValeur >= volumeGros) {
                    qttProduit.css('background-color', '#fc8b8b');
                    qttProduit.val("");
                    var message = 'La quantité ' + qttValeur + ' pour le type de vente détail ne doit pas supérieur ou égale au volume de gros ' + volumeGros;
                    //alert(message);
                    setTimeout(function () {
                        toastr.options = {
                            closeButton: true,
                            progressBar: true,
                            showMethod: 'slideDown',
                            timeOut: 5000
                        };
                        toastr.error(message);

                    }, 800);

                } else {
                    qttProduit.css('background-color', '#fff');
                    inputOther.show();
                    labelOther.show();
                }
            });

            inputOther.change(function() {
                var inputValueUnite = otherUnite.find('.valeur-unite');
                inputValueUnite.click(function() {
                    if($(this).attr('readonly')) {
                        var message = 'Veuillez d\'abord choisir une unité';
                        setTimeout(function () {
                            toastr.options = {
                                closeButton: true,
                                progressBar: true,
                                showMethod: 'slideDown',
                                timeOut: 2000
                            };
                            toastr.error(message);

                        }, 800);
                    }
                })

                if ($(this).is(':checked')) {
                   otherUnite.show();
                    var inputOtherUnite = otherUnite.find('.unite-check');
                   
                   inputOtherUnite.change(function() {
                    var uniteName = $(this).data('name');
                    var divider = otherUnite.find('.divider-' + uniteName).data('divider');
                    if($(this).is(':checked')) {
                        inputValueUnite.removeAttr('readonly');

                        $('.unite-check').not(this).prop('checked', false);

                        inputValueUnite.on('input', function() {
                            const valueUnite = $(this).val();
                            const newQttProduit = valueUnite / divider;

                            // Utiliser .val() pour mettre à jour la valeur de l'input qttProduit
                            if(newQttProduit >= volumeGros) {
                                qttProduit.css('background-color', '#fc8b8b');
                                qttProduit.val("");
                                var message = 'La quantité ' + newQttProduit + ' pour le type de vente détail ne doit pas supérieur ou égale au volume de gros ' + volumeGros;
                                
                                setTimeout(function () {
                                    toastr.options = {
                                        closeButton: true,
                                        progressBar: true,
                                        showMethod: 'slideDown',
                                        timeOut: 5000
                                    };
                                    toastr.error(message);

                                }, 800);

                            } else {
                                qttProduit.css('background-color', '#fff');
                                qttProduit.val(newQttProduit);
                            }

                        });
                        
                    } else {
                        inputValueUnite.attr('readonly', true);
                    }
                })

                } else {
                   otherUnite.hide();
                }

            });

        }else if(typeVente == "gros") {
            qttProduit.on('input', function() {
                const qttProduitValue = $(this).val();

                if(qttProduitValue > stockRestant) {
                    qttProduit.css('background-color', '#fc8b8b');
                    qttProduit.val("");
                    var message = 'La quantité ' + qttProduitValue + ' ne doit pas supérieur ou égale au stock restant ' + stockRestant;
                    setTimeout(function () {
                        toastr.options = {
                            closeButton: true,
                            progressBar: true,
                            showMethod: 'slideDown',
                            timeOut: 5000
                        };
                        toastr.error(message);

                    }, 800);
                } else {
                    qttProduit.css('background-color', '#fff');
                }
            })
            unite.text(presentationGros);
            qttProduit.css('background-color', '#fff');
            inputOther.hide();
            labelOther.hide();
        }
    });

    // Ajouter un événement au clic sur qttProduit pour afficher un message d'alerte si readonly est actif
    $('input[name="qttProduit"]').click(function() {
        if ($(this).attr('readonly')) {
            setTimeout(function () {
                toastr.options = {
                    closeButton: true,
                    progressBar: true,
                    showMethod: 'slideDown',
                    timeOut: 3000
                };
                toastr.error('Veuillez d\'abord sélectionner un type de vente avant d\'ajouter la quantité');

            }, 800);
            //alert('Veuillez d\'abord sélectionner un type de vente avant d\'ajouter la quantité');
        }
    });
});

</script>



