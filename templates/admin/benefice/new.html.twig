
<div class="modal fade" id="modalNewRevenu" tabindex="-1" aria-labelledby="modalNewLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content p-4">
            <div class="modal-header modal-header-center">
                <h5 class="modal-title fw-bold" id="modalNewLabel">Nouveau encaissement</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                
                {{ form_start(form, {'attr': {'id': 'newRevenu', 'action': path('Revenus_create') }}) }}
                   
                    <div class="form-group mb-3">
                        <label for="" class="mb-2">Designation <sup class="text-danger">*</sup> </label>
                        <span class="text-danger" style="font-size: 12px;"> {{form_errors(form.designation)}} </span>
                        {{ form_widget(form.designation) }}
                    </div>
                    <div class="form-group mb-3">
                        <label for="" class="mb-2">Date <sup class="text-danger">*</sup> </label>
                        <span class="text-danger" style="font-size: 12px;"> {{form_errors(form.dateRevenu)}} </span>
                        {{ form_widget(form.dateRevenu) }}
                    </div>
                    <div class="alert alert-warning">
                        <h4 class="fw-bold text-center">Commandes</h4>
                        <div class="row">
                            {% for facture in factures %}
                            <div class="col-md-6 col-12">
                                <p>
                                    {% if facture.isEcheance is not null and facture.isEcheance == true %}
                                        FAC/VSM/{{facture.numero}}-E{{facture.echeanceNumero}}-{{ facture.date|date('y')}}
                                      {% elseif facture.isDepot is not null and facture.isDepot == true %}
                                        FAC/VSM/{{facture.numero}}-D{{facture.depotNumero}}-{{ facture.date|date('y')}}
                                      {% else %}
                                        FAC/VSM/{{facture.numero}}-{{ facture.date|date('y')}}
                                      {% endif %}
                                </p>
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                    <div class="alert alert-info">
                        <h4 class="fw-bold text-center">Récapitulatif</h4>
                        <p><strong>Espèce : </strong> {{espece|number_format(0,',',' ')}} Ariary </p>
                        <p><strong>Mobile money : </strong> {{(mvola + orange + airtel)|number_format(0,',',' ')}} Ariary </p>
                        <p><strong>Total : </strong> {{(mvola + orange + airtel + espece)|number_format(0,',',' ')}} Ariary </p>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary btn-sm px-5 mt-3" style="width: 100%;">Ajouter bénéfice</button>
                    </div>
                {{ form_end(form) }}
            </div>
        </div>
    </div>
</div>

{% block javascripts %}
<script src="{{ asset('assets/js/script_utile.js')}}"></script>
<script>

$(document).ready(function() {
  var dateFormat = 'dd/mm/yyyy';
  var dateNow = new Date();
  dateNow.setDate(dateNow.getDate() + 1)

  $('#Revenu_dateRevenu').datepicker({
      format: dateFormat,
      todayHighlight: true,
      language: 'fr',
      autoclose: true,

  });

});
  
    $(document).ready(function () {
        var anchorName = document.location.hash.substring(1);
    
       $('#newRevenu').on('submit', function (e) {
            e.preventDefault();
            let form = $(this);
            
            // Create an FormData object
            let formData = new FormData(form[0]);
          formData.append('isNew', false);
            $.ajax({
                url: form.attr('action'),
                type: form.attr('method'),
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    $('#modalNewRevenu').modal('hide');
                    var nextLink = $('#sidebar').find('li#Revenu').find('a');
                    setTimeout(function () {
                        toastr.options = {
                            closeButton: true,
                            progressBar: true,
                            showMethod: 'slideDown',
                            timeOut: 1000
                        };
                        toastr.success('Avec succèss', 'Enregistrement effectuée');
                        showTabComptabilite();
                        
                        if (response.pdfUrl) {
                            window.open(response.pdfUrl, '_blank');
                        }

                    }, 800);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    // Gérer l'erreur (par exemple, afficher un message d'erreur)
                    alert('Erreur lors de l\'ajout de bénéfice.');
                }
            });
        });
    });
</script>

{% endblock %}