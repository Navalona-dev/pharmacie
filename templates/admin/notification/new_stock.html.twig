
<div class="modal fade" id="modalNotificationNewStock" tabindex="-1" aria-labelledby="modalNewLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content p-4 modal-stock">
            <div class="modal-header modal-header-center">
                <h5 class="modal-title fw-bold" id="modalNewLabel">Nouveau Stock</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                
                {{ form_start(form, {'attr': {'id': 'notificationNewStock', 'action': path('notifications_create', {'id' : notification.id}) }}) }}
                    <div class="form-group mb-3">
                        <label for="" class="mb-2">Quantité</label>
                        {{ form_widget(form.qtt) }}
                    </div>  
                     
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary btn-sm px-5 mt-3" style="width: 100%;">Ajouter stock</button>
                    </div>
                {{ form_end(form) }}
            </div>
        </div>
    </div>
</div>

{% block javascripts %}
<script src="{{ asset('assets/js/script_utile.js')}}"></script>
<script>
  
    $(document).ready(function () {
    
       $('#notificationNewStock').on('submit', function (e) {
            e.preventDefault();
            let form = $(this);
          
            // Create an FormData object
            let formData = new FormData(form[0]);
          formData.append('isNew', false);
            $.ajax({
                url: form.attr('action'),
                type: form.attr('method'),
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    $('#modalNotificationNewStock').modal('hide');
                    var nextLink = $('#sidebar').find('li#stock').find('a');
                    setTimeout(function () {
                        toastr.options = {
                            closeButton: true,
                            progressBar: true,
                            showMethod: 'slideDown',
                            timeOut: 1000
                        };
                        toastr.success('Avec succèss', 'Enregistrement effectuée');

                        //$(".loadBody").css('display', 'none');

                    }, 800);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    // Gérer l'erreur (par exemple, afficher un message d'erreur)
                    alert('Erreur lors de l\'ajout de stock.');
                }
            });
        });
    });
</script>
{% endblock %}